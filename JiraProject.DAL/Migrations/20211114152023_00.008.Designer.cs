// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using JiraProject.DAL.Context;

namespace JiraProject.DAL.Migrations
{
    [DbContext(typeof(JiraProjectContext))]
    [Migration("20211114152023_00.008")]
    partial class _00008
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID1");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID1");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("RolesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID1");

                    b.HasIndex("RolesID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", null)
                        .WithMany("Roles")
                        .HasForeignKey("CompanyID1");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", null)
                        .WithMany("User")
                        .HasForeignKey("CompanyID1");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", null)
                        .WithMany("UserRole")
                        .HasForeignKey("CompanyID1");

                    b.HasOne("JiraProject.DAL.Entities.Roles", null)
                        .WithMany("UserRole")
                        .HasForeignKey("RolesID");

                    b.HasOne("JiraProject.DAL.Entities.User", null)
                        .WithMany("UserRole")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("User");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
