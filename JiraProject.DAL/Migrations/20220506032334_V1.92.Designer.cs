// <auto-generated />
using System;
using JiraProject.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JiraProject.DAL.Migrations
{
    [DbContext(typeof(JiraProjectContext))]
    [Migration("20220506032334_V1.92")]
    partial class V192
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.MenuRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParameterMasterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ParameterMasterID");

                    b.ToTable("ParameterDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ParameterMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectIssues", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FixVersionID")
                        .HasColumnType("int");

                    b.Property<int>("FlagID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("IssueTypeID")
                        .HasColumnType("int");

                    b.Property<int>("IssuesParentID")
                        .HasColumnType("int");

                    b.Property<int>("LabelID")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectIssuespProjectID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectReporterID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectUsersID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectIssuespProjectID");

                    b.HasIndex("ProjectReporterID");

                    b.HasIndex("ProjectUsersID");

                    b.ToTable("ProjectIssues");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectUser");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Projects", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Menu", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "IPCompanyMenu")
                        .WithMany("CompanyMenu")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPCompanyMenu");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.MenuRole", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Menu", "IPMenuMenuRole")
                        .WithMany("IPMenuMenuRole")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.Roles", "IPRolesMenuRole")
                        .WithMany("IPRolesMenuRole")
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPMenuMenuRole");

                    b.Navigation("IPRolesMenuRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterDetail", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterMaster", "ParameterMasterMasterID")
                        .WithMany("ParameterDetail")
                        .HasForeignKey("ParameterMasterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterMasterMasterID");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectIssues", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Projects", "IPProjectProjectIssues")
                        .WithMany("IPProjectProjectIssues")
                        .HasForeignKey("ProjectIssuespProjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "IPUserProjectIssuesReporter")
                        .WithMany("IPUserProjectIssuesReporter")
                        .HasForeignKey("ProjectReporterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "IPUserProjectIssuesUser")
                        .WithMany("IPUserProjectIssuesUser")
                        .HasForeignKey("ProjectUsersID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPProjectProjectIssues");

                    b.Navigation("IPUserProjectIssuesReporter");

                    b.Navigation("IPUserProjectIssuesUser");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectUser", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Projects", "IPProjectsProjectUser")
                        .WithMany("ProjectsProjectUsers")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "IPUserProjectUser")
                        .WithMany("UserProjectUser")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPProjectsProjectUser");

                    b.Navigation("IPUserProjectUser");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Projects", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "IPCompanyProjects")
                        .WithMany("CompanyProjects")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPCompanyProjects");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "IPCompanyRoles")
                        .WithMany("CompanyRoles")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPCompanyRoles");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "IPCompanyUsers")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPCompanyUsers");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "IPCompanyUserRole")
                        .WithMany("CompanyUserRole")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.Roles", "IPUserRoleRoles")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "IPUserRoleUser")
                        .WithMany("UserRole")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPCompanyUserRole");

                    b.Navigation("IPUserRoleRoles");

                    b.Navigation("IPUserRoleUser");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserToken", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.User", "IPUserTokenUser")
                        .WithMany("UserTokenUser")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IPUserTokenUser");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Navigation("CompanyMenu");

                    b.Navigation("CompanyProjects");

                    b.Navigation("CompanyRoles");

                    b.Navigation("CompanyUserRole");

                    b.Navigation("CompanyUsers");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Menu", b =>
                {
                    b.Navigation("IPMenuMenuRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterMaster", b =>
                {
                    b.Navigation("ParameterDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Projects", b =>
                {
                    b.Navigation("IPProjectProjectIssues");

                    b.Navigation("ProjectsProjectUsers");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Roles", b =>
                {
                    b.Navigation("IPRolesMenuRole");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Navigation("IPUserProjectIssuesReporter");

                    b.Navigation("IPUserProjectIssuesUser");

                    b.Navigation("UserProjectUser");

                    b.Navigation("UserRole");

                    b.Navigation("UserTokenUser");
                });
#pragma warning restore 612, 618
        }
    }
}
