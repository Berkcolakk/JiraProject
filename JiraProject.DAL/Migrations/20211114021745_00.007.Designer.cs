// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using JiraProject.DAL.Context;

namespace JiraProject.DAL.Migrations
{
    [DbContext(typeof(JiraProjectContext))]
    [Migration("20211114021745_00.007")]
    partial class _00007
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMPANY_ADRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMPANY_COMPANY_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMPANY_FAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMPANY_PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COMPANY_STORE_ID")
                        .HasColumnType("int");

                    b.Property<bool>("COMPANY_SUBCONTRACTOR")
                        .HasColumnType("bit");

                    b.Property<string>("COMPANY_TAXNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMPANY_TAXNUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("COMPANY_STORE_ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CONTRACT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CONTRACT_MASTER_ID")
                        .HasColumnType("int");

                    b.Property<string>("CONTRACT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CONTRACT_PRICECUTRATE")
                        .HasColumnType("float");

                    b.Property<double>("CONTRACT_TOTALPRICE")
                        .HasColumnType("float");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CONTRACT_MASTER_ID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_ASSM_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_DEASSMDE_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_DEASSM_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ITEM_GROUP_ID")
                        .HasColumnType("int");

                    b.Property<string>("ITEM_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_REF_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ITEM_UNIT_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ITEM_GROUP_ID");

                    b.HasIndex("ITEM_UNIT_ID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ItemDemandDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ITEMDEMANDDETAIL_ITEM_CONFIRMATION")
                        .HasColumnType("bit");

                    b.Property<int>("ITEMDEMANDDETAIL_ITEM_ID")
                        .HasColumnType("int");

                    b.Property<int>("ITEMDEMANDDETAIL_MASTER_ID")
                        .HasColumnType("int");

                    b.Property<double>("ITEMDEMANDDETAIL_QUANTITY")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ITEMDEMANDDETAIL_ITEM_ID");

                    b.HasIndex("ITEMDEMANDDETAIL_MASTER_ID");

                    b.ToTable("ItemDemandDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ItemDemandMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEMDEMANDMASTER_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ITEMDEMANDMASTER_ITEMCONFIRMATION")
                        .HasColumnType("bit");

                    b.Property<int>("ITEMDEMANDMASTER_PROJECT_ID")
                        .HasColumnType("int");

                    b.Property<int>("ITEMDEMANDMASTER_STATE_ID")
                        .HasColumnType("int");

                    b.Property<int>("ITEMDEMANDMASTER_USER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ITEMDEMANDMASTER_PROJECT_ID");

                    b.HasIndex("ITEMDEMANDMASTER_STATE_ID");

                    b.HasIndex("ITEMDEMANDMASTER_USER_ID");

                    b.ToTable("ItemDemandMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.MenuRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MENUROLE_MENU_ID")
                        .HasColumnType("int");

                    b.Property<int>("MENUROLE_ROLE_ID")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MENUROLE_MENU_ID");

                    b.HasIndex("MENUROLE_ROLE_ID");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PARAMETERDETAIL_MASTER_ID")
                        .HasColumnType("int");

                    b.Property<string>("PARAMETERDETAIL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARAMETERDETAIL_VALUE1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARAMETERDETAIL_VALUE2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARAMETERDETAIL_VALUE3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PARAMETERDETAIL_MASTER_ID");

                    b.ToTable("ParameterDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PARAMETERMASTER_ISEDITABLE")
                        .HasColumnType("bit");

                    b.Property<string>("PARAMETERMASTER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ParameterMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffControl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFCONTROL_ITEMNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFCONTROL_LB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PAYOFFCONTROL_PAYOFFMASTER_ID")
                        .HasColumnType("int");

                    b.Property<string>("PAYOFFCONTROL_PYP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PAYOFFCONTROL_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("PAYOFFCONTROL_SAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PAYOFFCONTROL_TENSIZUP")
                        .HasColumnType("float");

                    b.Property<double>("PAYOFFCONTROL_TENUP")
                        .HasColumnType("float");

                    b.Property<double>("PAYOFFCONTROL_TOTALTENSIZUP")
                        .HasColumnType("float");

                    b.Property<double>("PAYOFFCONTROL_TOTALTENUP")
                        .HasColumnType("float");

                    b.Property<int>("PAYOFFCONTROL_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<string>("PAYOFFCONTROL_UNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PAYOFFCONTROL_PAYOFFMASTER_ID");

                    b.ToTable("PayoffControl");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffDefault", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYOFFDEFAULT_DEF9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PAYOFFDEFAULT_PAYOFFMASTER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PAYOFFDEFAULT_PAYOFFMASTER_ID");

                    b.ToTable("PayoffDefault");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PAYOFFDETAIL_INCLUDEPRICE")
                        .HasColumnType("float");

                    b.Property<int>("PAYOFFDETAIL_ITEMTYPE_ID")
                        .HasColumnType("int");

                    b.Property<int>("PAYOFFDETAIL_ITEM_ID")
                        .HasColumnType("int");

                    b.Property<double>("PAYOFFDETAIL_UNITPRICE")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PAYOFFDETAIL_ITEMTYPE_ID");

                    b.HasIndex("PAYOFFDETAIL_ITEM_ID");

                    b.ToTable("PayoffDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PAYOFFMASTER_PARAMETERCODE")
                        .HasColumnType("float");

                    b.Property<int>("PAYOFFMASTER_PROJECT_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PAYOFFMASTER_PROJECT_ID");

                    b.ToTable("PayoffMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PROJECT_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<double>("PROJECT_CONSTRUCTORPRICE")
                        .HasColumnType("float");

                    b.Property<int>("PROJECT_CONTRACT_ID")
                        .HasColumnType("int");

                    b.Property<int>("PROJECT_DAY")
                        .HasColumnType("int");

                    b.Property<DateTime>("PROJECT_DELIVERYDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("PROJECT_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PROJECT_DISCOUNTEDPRICE")
                        .HasColumnType("float");

                    b.Property<string>("PROJECT_EXPLOREDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PROJECT_EXPLOREPRICE")
                        .HasColumnType("float");

                    b.Property<int>("PROJECT_EXPLORESTATE_ID")
                        .HasColumnType("int");

                    b.Property<string>("PROJECT_GROUP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PROJECT_ISDELIVERYEXPLORE")
                        .HasColumnType("bit");

                    b.Property<string>("PROJECT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PROJECT_OWNERPRICE")
                        .HasColumnType("float");

                    b.Property<string>("PROJECT_PYP_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PROJECT_STATE_ID")
                        .HasColumnType("int");

                    b.Property<int>("PROJECT_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PROJECT_WORKORDERDATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PROJECT_COMPANY_ID");

                    b.HasIndex("PROJECT_CONTRACT_ID");

                    b.HasIndex("PROJECT_EXPLORESTATE_ID");

                    b.HasIndex("PROJECT_STATE_ID");

                    b.HasIndex("PROJECT_TYPE_ID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectExplore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PROJECTEXPLORE_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PROJECTEXPLORE_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PROJECTEXPLORE_ITEMASSMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_ITEMDEASSMDEPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_ITEMDEASSMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_ITEMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_ITEMQUANTITY")
                        .HasColumnType("float");

                    b.Property<int>("PROJECTEXPLORE_ITEM_ID")
                        .HasColumnType("int");

                    b.Property<string>("PROJECTEXPLORE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PROJECTEXPLORE_PLACEITEMASSMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_PLACEITEMDEASSMDEPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_PLACEITEMDEASSMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_PLACEITEMPRICE")
                        .HasColumnType("float");

                    b.Property<double>("PROJECTEXPLORE_PLACEITEMQUANTITY")
                        .HasColumnType("float");

                    b.Property<int>("PROJECTEXPLORE_PROJECT_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PROJECTEXPLORE_ITEM_ID");

                    b.HasIndex("PROJECTEXPLORE_PROJECT_ID");

                    b.ToTable("ProjectExplore");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectManager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PROJECTMANAGER_PROJECT_ID")
                        .HasColumnType("int");

                    b.Property<int>("PROJECTMANAGER_USER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PROJECTMANAGER_PROJECT_ID");

                    b.HasIndex("PROJECTMANAGER_USER_ID");

                    b.ToTable("ProjectManager");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.StockDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STOCKDETAIL_BARCODE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STOCKDETAIL_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STOCKDETAIL_ITEM_ID")
                        .HasColumnType("int");

                    b.Property<int>("STOCKDETAIL_MASTER_ID")
                        .HasColumnType("int");

                    b.Property<double?>("STOCKDETAIL_PRIVATEVALUE1")
                        .HasColumnType("float");

                    b.Property<double?>("STOCKDETAIL_PRIVATEVALUE2")
                        .HasColumnType("float");

                    b.Property<double>("STOCKDETAIL_QUANTITY")
                        .HasColumnType("float");

                    b.Property<int>("STOCKDETAIL_RACK_ID")
                        .HasColumnType("int");

                    b.Property<int?>("STOCKDETAIL_REF_ID")
                        .HasColumnType("int");

                    b.Property<string>("STOCKDETAIL_REF_LINK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STOCKDETAIL_SERIALNUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STOCKDETAIL_STORE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("STOCKDETAIL_ITEM_ID");

                    b.HasIndex("STOCKDETAIL_MASTER_ID");

                    b.HasIndex("STOCKDETAIL_RACK_ID");

                    b.HasIndex("STOCKDETAIL_STORE_ID");

                    b.ToTable("StockDetail");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.StockMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("COMPANY_SUB_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("STOCKMASTER_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<int?>("STOCKMASTER_REF_ID")
                        .HasColumnType("int");

                    b.Property<string>("STOCKMASTER_REF_LINK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STOCKMASTER_SOURCESTORE_ID")
                        .HasColumnType("int");

                    b.Property<int>("STOCKMASTER_TARGETSTORE_ID")
                        .HasColumnType("int");

                    b.Property<int>("STOCKMASTER_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<string>("STOCKMASTER_WAYBILL_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STOCKMASTER_WAYBILL_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("COMPANY_SUB_COMPANY_ID");

                    b.HasIndex("STOCKMASTER_COMPANY_ID");

                    b.HasIndex("STOCKMASTER_SOURCESTORE_ID");

                    b.HasIndex("STOCKMASTER_TARGETSTORE_ID");

                    b.HasIndex("STOCKMASTER_TYPE_ID");

                    b.ToTable("StockMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("USERROLE_ROLE_ID")
                        .HasColumnType("int");

                    b.Property<int>("USERROLE_USER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("USERROLE_ROLE_ID");

                    b.HasIndex("USERROLE_USER_ID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Company_Store")
                        .WithMany("ParameterDetail_Company_Store")
                        .HasForeignKey("COMPANY_STORE_ID");

                    b.Navigation("ParameterDetail_Company_Store");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Contract", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Contract", "MasterContract")
                        .WithMany()
                        .HasForeignKey("CONTRACT_MASTER_ID");

                    b.Navigation("MasterContract");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Item", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Item_Group")
                        .WithMany("ParameterDetail_Group")
                        .HasForeignKey("ITEM_GROUP_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Item_Unit")
                        .WithMany("ParameterDetail_Unit")
                        .HasForeignKey("ITEM_UNIT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterDetail_Item_Group");

                    b.Navigation("ParameterDetail_Item_Unit");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ItemDemandDetail", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Item", "Item")
                        .WithMany("ItemDemandDetails")
                        .HasForeignKey("ITEMDEMANDDETAIL_ITEM_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ItemDemandMaster", "ItemDemandMaster")
                        .WithMany("ItemDemandDetails")
                        .HasForeignKey("ITEMDEMANDDETAIL_MASTER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemDemandMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ItemDemandMaster", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ITEMDEMANDMASTER_PROJECT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_ItemDemandMaster_State")
                        .WithMany("ParameterDetail_ItemDemandMaster_State")
                        .HasForeignKey("ITEMDEMANDMASTER_STATE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "User")
                        .WithMany("ItemDemandMasters")
                        .HasForeignKey("ITEMDEMANDMASTER_USER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterDetail_ItemDemandMaster_State");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.MenuRole", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_MenuRole_Menu")
                        .WithMany("ParameterDetail_Menu")
                        .HasForeignKey("MENUROLE_MENU_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_MenuRole_Role")
                        .WithMany("ParameterDetail_Role")
                        .HasForeignKey("MENUROLE_ROLE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterDetail_MenuRole_Menu");

                    b.Navigation("ParameterDetail_MenuRole_Role");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterDetail", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterMaster", "ParameterMaster")
                        .WithMany("ParameterDetails")
                        .HasForeignKey("PARAMETERDETAIL_MASTER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffControl", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.PayoffMaster", "PayoffMaster")
                        .WithMany("PayoffControls")
                        .HasForeignKey("PAYOFFCONTROL_PAYOFFMASTER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PayoffMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffDefault", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.PayoffMaster", "PayoffMaster")
                        .WithMany("PayoffDefaults")
                        .HasForeignKey("PAYOFFDEFAULT_PAYOFFMASTER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PayoffMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffDetail", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Payoff_ItemType")
                        .WithMany("ParameterDetail_ItemType")
                        .HasForeignKey("PAYOFFDETAIL_ITEMTYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.Item", "Item")
                        .WithMany("PayoffDetails")
                        .HasForeignKey("PAYOFFDETAIL_ITEM_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ParameterDetail_Payoff_ItemType");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffMaster", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Project", "Project")
                        .WithMany("Payoffs")
                        .HasForeignKey("PAYOFFMASTER_PROJECT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Project", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("PROJECT_COMPANY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.Contract", "Contract")
                        .WithMany("Projects")
                        .HasForeignKey("PROJECT_CONTRACT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Project_ExploreState")
                        .WithMany("ParameterDetail_ExploreState")
                        .HasForeignKey("PROJECT_EXPLORESTATE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Project_State")
                        .WithMany("ParameterDetail_State")
                        .HasForeignKey("PROJECT_STATE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_Project_ContractType")
                        .WithMany("ParameterDetail_ContractType")
                        .HasForeignKey("PROJECT_TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Contract");

                    b.Navigation("ParameterDetail_Project_ContractType");

                    b.Navigation("ParameterDetail_Project_ExploreState");

                    b.Navigation("ParameterDetail_Project_State");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectExplore", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Item", "Item")
                        .WithMany("ProjectExplores")
                        .HasForeignKey("PROJECTEXPLORE_ITEM_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.Project", "Project")
                        .WithMany("ProjectExplores")
                        .HasForeignKey("PROJECTEXPLORE_PROJECT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ProjectManager", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Project", "Project")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("PROJECTMANAGER_PROJECT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "User")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("PROJECTMANAGER_USER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.StockDetail", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("STOCKDETAIL_ITEM_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.StockMaster", "StockMaster")
                        .WithMany("StockDetails")
                        .HasForeignKey("STOCKDETAIL_MASTER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_StockDetail_Rack")
                        .WithMany("ParameterDetail_Rack")
                        .HasForeignKey("STOCKDETAIL_RACK_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_StockDetail_Store")
                        .WithMany("ParameterDetail_Store")
                        .HasForeignKey("STOCKDETAIL_STORE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ParameterDetail_StockDetail_Rack");

                    b.Navigation("ParameterDetail_StockDetail_Store");

                    b.Navigation("StockMaster");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.StockMaster", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.Company", "SubCompany")
                        .WithMany("Sub_StockMasters")
                        .HasForeignKey("COMPANY_SUB_COMPANY_ID");

                    b.HasOne("JiraProject.DAL.Entities.Company", "Company")
                        .WithMany("StockMasters")
                        .HasForeignKey("STOCKMASTER_COMPANY_ID");

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_StockMaster_SourceStore")
                        .WithMany("StockMaster_SourceStores")
                        .HasForeignKey("STOCKMASTER_SOURCESTORE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_StockMaster_Store")
                        .WithMany("StockMaster_Stores")
                        .HasForeignKey("STOCKMASTER_TARGETSTORE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_StockMaster_Type")
                        .WithMany("StockMaster_Types")
                        .HasForeignKey("STOCKMASTER_TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ParameterDetail_StockMaster_SourceStore");

                    b.Navigation("ParameterDetail_StockMaster_Store");

                    b.Navigation("ParameterDetail_StockMaster_Type");

                    b.Navigation("SubCompany");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("JiraProject.DAL.Entities.ParameterDetail", "ParameterDetail_UserRole_Role")
                        .WithMany("ParameterDetail_UserRole")
                        .HasForeignKey("USERROLE_ROLE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JiraProject.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("USERROLE_USER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParameterDetail_UserRole_Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Company", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("StockMasters");

                    b.Navigation("Sub_StockMasters");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Contract", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Item", b =>
                {
                    b.Navigation("ItemDemandDetails");

                    b.Navigation("PayoffDetails");

                    b.Navigation("ProjectExplores");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ItemDemandMaster", b =>
                {
                    b.Navigation("ItemDemandDetails");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterDetail", b =>
                {
                    b.Navigation("ParameterDetail_Company_Store");

                    b.Navigation("ParameterDetail_ContractType");

                    b.Navigation("ParameterDetail_ExploreState");

                    b.Navigation("ParameterDetail_Group");

                    b.Navigation("ParameterDetail_ItemDemandMaster_State");

                    b.Navigation("ParameterDetail_ItemType");

                    b.Navigation("ParameterDetail_Menu");

                    b.Navigation("ParameterDetail_Rack");

                    b.Navigation("ParameterDetail_Role");

                    b.Navigation("ParameterDetail_State");

                    b.Navigation("ParameterDetail_Store");

                    b.Navigation("ParameterDetail_Unit");

                    b.Navigation("ParameterDetail_UserRole");

                    b.Navigation("StockMaster_SourceStores");

                    b.Navigation("StockMaster_Stores");

                    b.Navigation("StockMaster_Types");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.ParameterMaster", b =>
                {
                    b.Navigation("ParameterDetails");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.PayoffMaster", b =>
                {
                    b.Navigation("PayoffControls");

                    b.Navigation("PayoffDefaults");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.Project", b =>
                {
                    b.Navigation("Payoffs");

                    b.Navigation("ProjectExplores");

                    b.Navigation("ProjectManagers");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.StockMaster", b =>
                {
                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("JiraProject.DAL.Entities.User", b =>
                {
                    b.Navigation("ItemDemandMasters");

                    b.Navigation("ProjectManagers");
                });
#pragma warning restore 612, 618
        }
    }
}
