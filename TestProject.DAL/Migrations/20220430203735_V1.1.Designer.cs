// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject.DAL.Context;

namespace TestProject.DAL.Migrations
{
    [DbContext(typeof(TestProjectContext))]
    [Migration("20220430203735_V1.1")]
    partial class V11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestProject.DAL.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 982, DateTimeKind.Local).AddTicks(7595),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Desc = "Seeding-Data",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            Name = "INTRANET Yazılım Teknolojileri",
                            RegistrationNumber = "0",
                            Type = "1",
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 983, DateTimeKind.Local).AddTicks(7436),
                            UpdUserID = 0,
                            UpdUserIP = "0"
                        });
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.MenuRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int?>("RolesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RolesID");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("MenuID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 985, DateTimeKind.Local).AddTicks(4440),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Desc = "TEST",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            Name = "Yazılım Geliştirici",
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 985, DateTimeKind.Local).AddTicks(4449),
                            UpdUserID = 0,
                            UpdUserIP = "0"
                        });
                });

            modelBuilder.Entity("TestProject.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(102),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Email = "berkcolak4@gmail.com",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            Password = "123456",
                            Phone = "5434203403",
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(109),
                            UpdUserID = 0,
                            UpdUserIP = "0",
                            UserName = "Berk Çolak"
                        },
                        new
                        {
                            ID = 2,
                            CompanyID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(1125),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Email = "test@test.com.tr",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            Password = "123456",
                            Phone = "123456",
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(1131),
                            UpdUserID = 0,
                            UpdUserIP = "0",
                            UserName = "Test Test"
                        },
                        new
                        {
                            ID = 3,
                            CompanyID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(1135),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Email = "test2@test.com.tr",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            Password = "123456",
                            Phone = "123456",
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(1137),
                            UpdUserID = 0,
                            UpdUserIP = "0",
                            UserName = "Test Test"
                        });
                });

            modelBuilder.Entity("TestProject.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("RolesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RolesID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyID = 1,
                            CrtDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(4090),
                            CrtUserID = 0,
                            CrtUserIP = "0",
                            Desc = "TEST",
                            IsActive = true,
                            MachineName = "DESKTOP-0000",
                            RoleID = 1,
                            StartDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(4946),
                            UpdDate = new DateTime(2022, 4, 30, 23, 37, 34, 986, DateTimeKind.Local).AddTicks(4097),
                            UpdUserID = 0,
                            UpdUserIP = "0",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("TestProject.DAL.Entities.UserToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CrtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrtUserID")
                        .HasColumnType("int");

                    b.Property<string>("CrtUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdUserID")
                        .HasColumnType("int");

                    b.Property<string>("UpdUserIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Menu", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.Company", null)
                        .WithMany("Menu")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.DAL.Entities.MenuRole", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.Roles", null)
                        .WithMany("MenuRole")
                        .HasForeignKey("RolesID");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Roles", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.Company", null)
                        .WithMany("Roles")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestProject.DAL.Entities.Menu", null)
                        .WithMany("Roles")
                        .HasForeignKey("MenuID");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.User", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.Company", null)
                        .WithMany("User")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.Company", null)
                        .WithMany("UserRole")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestProject.DAL.Entities.Roles", null)
                        .WithMany("UserRole")
                        .HasForeignKey("RolesID");

                    b.HasOne("TestProject.DAL.Entities.User", null)
                        .WithMany("UserRole")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.DAL.Entities.UserToken", b =>
                {
                    b.HasOne("TestProject.DAL.Entities.User", null)
                        .WithMany("UserToken")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Company", b =>
                {
                    b.Navigation("Menu");

                    b.Navigation("Roles");

                    b.Navigation("User");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Menu", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.Roles", b =>
                {
                    b.Navigation("MenuRole");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("TestProject.DAL.Entities.User", b =>
                {
                    b.Navigation("UserRole");

                    b.Navigation("UserToken");
                });
#pragma warning restore 612, 618
        }
    }
}
